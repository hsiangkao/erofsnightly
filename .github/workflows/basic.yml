name: basictest

on:
  workflow_dispatch:
 
defaults:
  run:
    shell: bash

jobs:     
  build-kernel:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Clone latest tree
        run: |
          sudo rm -rf erofs; mkdir -p erofs
          git clone git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs.git -b dev-test erofs
      - name: Set up kernel tree
        run: |
          sudo apt -qq update
          sudo apt-get install -y libssl-dev libelf-dev flex bison dwarves
          cd erofs
          scripts/kconfig/merge_config.sh -m arch/x86/configs/x86_64_defconfig ../erofs-kernelconfig && \
            make olddefconfig
      - name: Get the HEAD commit ID
        id: get_version_id
        run: |
          echo "scm_version=`cd erofs; git rev-parse --verify HEAD | cut -c1-8`" >> $GITHUB_OUTPUT
          rm -rf erofs/.git       # delete .git to save space
      - name: Cache bzImage
        id: cache-bzImage
        uses: actions/cache@v4
        with:
          path: |
            erofs/arch/x86/boot/bzImage
          key: bzImage-${{ steps.get_version_id.outputs.scm_version }}
      - name: Build latest kernel
        if: steps.cache-bzImage.outputs.cache-hit != 'true'
        run: |
          cd erofs && make -j32
      - name: Upload bzImage
        uses: actions/upload-artifact@v4
        with:
          name: erofs-bzImage
          path: |
            erofs/arch/x86/boot/bzImage
  
  build-erofs-utils:
    runs-on: ubuntu-22.04
    needs: build-kernel
    steps:
      - uses: actions/checkout@v4
      - name: Check if erofs is enabled in kconfig
        run: |
          if grep -q "CONFIG_EROFS_FS=y" .config; then
            echo "erofs is enabled in kconfig"
          else
            echo "erofs is not enabled in kconfig"
            sudo echo 'CONFIG_EROFS_FS=y' >> .config
            make olddefconfig
          fi
      - name: Build erofs-utils
        run: |
          sudo apt -qq update
          sudo apt-get install -y libfuse-dev libselinux1-dev libzstd-dev
          curl -L https://github.com/lz4/lz4/archive/refs/tags/v1.9.4.tar.gz | tar -zxv
          make BUILD_SHARED=no -C lz4-1.9.4 && lz4libdir=$(pwd)/lz4-1.9.4/lib
          git clone git://git.kernel.org/pub/scm/linux/kernel/git/xiang/erofs-utils.git -b experimental-tests
          cd erofs-utils
          mkdir output
          ./autogen.sh && ./configure --enable-debug --enable-werror --enable-fuse --with-selinux --with-libzstd \
              --disable-multithreading \
              --prefix=$(pwd)/output \
              --with-lz4-incdir=${lz4libdir} --with-lz4-libdir=${lz4libdir} && \
              sudo make check && make install
        timeout-minutes: 10
      - name: Upload results if build failed
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: results-output
          path: |
            erofs-utils/tests/results/erofs
      - name: Upload erofs-utils
        uses: actions/upload-artifact@v4
        with:
          name: erofs-utils
          path: |
            erofs-utils/output

  run-stress-test:
    runs-on: ubuntu-22.04
    needs: build-erofs-utils
    steps:
      - name: Download erofs-utils prebuilts
        uses: actions/download-artifact@v4
        with:
          name: erofs-utils
      - name: Make erofs file image
        run: |
          sudo apt -qq update
          sudo apt-get install -y libfuse2
          mkdir silesia out
          wget -O silesia.zip https://mattmahoney.net/dc/silesia.zip
          unzip silesia.zip -d silesia
          chmod +x bin/mkfs.erofs bin/erofsfuse
          bin/mkfs.erofs -C4096 silesia.erofs.img silesia 
          bin/erofsfuse silesia.erofs.img out
      - name: Run stress test
        run: |
          sudo apt-get install gcc
          git clone https://github.com/erofs/erofsstress.git
          cd erofsstress
          gcc stress.c -o stress
          ./stress -l100 -p2 ../silesia
